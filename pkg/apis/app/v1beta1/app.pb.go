// Code generated by protoc-gen-go.
// source: app.proto
// DO NOT EDIT!

/*
Package v1beta1 is a generated protocol buffer package.

It is generated from these files:
	app.proto

It has these top-level messages:
	HelloRequest
	HelloResponse
*/
package v1beta1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/googleapis/google/api"
import _ "github.com/grpc-ecosystem/grpc-gateway/third_party/appscodeapis/appscode/api"
import appscode_dtypes "github.com/appscode/api/dtypes"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HelloRequest struct {
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *HelloRequest) Reset()                    { *m = HelloRequest{} }
func (m *HelloRequest) String() string            { return proto.CompactTextString(m) }
func (*HelloRequest) ProtoMessage()               {}
func (*HelloRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *HelloRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type HelloResponse struct {
	Status    *appscode_dtypes.Status `protobuf:"bytes,1,opt,name=status" json:"status,omitempty"`
	Greetings string                  `protobuf:"bytes,2,opt,name=greetings" json:"greetings,omitempty"`
}

func (m *HelloResponse) Reset()                    { *m = HelloResponse{} }
func (m *HelloResponse) String() string            { return proto.CompactTextString(m) }
func (*HelloResponse) ProtoMessage()               {}
func (*HelloResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *HelloResponse) GetStatus() *appscode_dtypes.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *HelloResponse) GetGreetings() string {
	if m != nil {
		return m.Greetings
	}
	return ""
}

func init() {
	proto.RegisterType((*HelloRequest)(nil), "appscode.seed.app.v1beta1.HelloRequest")
	proto.RegisterType((*HelloResponse)(nil), "appscode.seed.app.v1beta1.HelloResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Apps service

type AppsClient interface {
	Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
}

type appsClient struct {
	cc *grpc.ClientConn
}

func NewAppsClient(cc *grpc.ClientConn) AppsClient {
	return &appsClient{cc}
}

func (c *appsClient) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	out := new(HelloResponse)
	err := grpc.Invoke(ctx, "/appscode.seed.app.v1beta1.Apps/Hello", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Apps service

type AppsServer interface {
	Hello(context.Context, *HelloRequest) (*HelloResponse, error)
}

func RegisterAppsServer(s *grpc.Server, srv AppsServer) {
	s.RegisterService(&_Apps_serviceDesc, srv)
}

func _Apps_Hello_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HelloRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AppsServer).Hello(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appscode.seed.app.v1beta1.Apps/Hello",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AppsServer).Hello(ctx, req.(*HelloRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Apps_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appscode.seed.app.v1beta1.Apps",
	HandlerType: (*AppsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Hello",
			Handler:    _Apps_Hello_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "app.proto",
}

func init() { proto.RegisterFile("app.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 289 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x90, 0xbd, 0x4e, 0xfb, 0x30,
	0x14, 0xc5, 0xe5, 0xa8, 0xff, 0xfe, 0x1b, 0x03, 0x8b, 0x17, 0x42, 0x54, 0x3e, 0x94, 0x01, 0x32,
	0xd9, 0x6a, 0xe9, 0x0b, 0xb4, 0x13, 0x63, 0x15, 0x36, 0x06, 0x90, 0xdb, 0x5c, 0x85, 0x48, 0xa9,
	0x7d, 0xe9, 0x75, 0x91, 0x58, 0xfb, 0x04, 0x48, 0x4c, 0x3c, 0x08, 0x4f, 0xc2, 0x2b, 0xf0, 0x20,
	0x28, 0x4e, 0xf8, 0xe8, 0x10, 0xb1, 0x44, 0xd1, 0x3d, 0xe7, 0xe7, 0x73, 0x74, 0x78, 0xa8, 0x11,
	0x25, 0xae, 0xad, 0xb3, 0xe2, 0x48, 0x23, 0xd2, 0xd2, 0xe6, 0x20, 0x09, 0x20, 0x97, 0xb5, 0xf0,
	0x38, 0x5a, 0x80, 0xd3, 0xa3, 0x78, 0x58, 0x58, 0x5b, 0x54, 0xa0, 0x34, 0x96, 0x4a, 0x1b, 0x63,
	0x9d, 0x76, 0xa5, 0x35, 0xd4, 0x80, 0xf1, 0xc9, 0x17, 0xd8, 0xa1, 0x9f, 0xee, 0xe8, 0xb9, 0x7b,
	0x42, 0x20, 0xe5, 0xbf, 0x8d, 0x21, 0x49, 0xf8, 0xfe, 0x15, 0x54, 0x95, 0xcd, 0xe0, 0x61, 0x03,
	0xe4, 0x84, 0xe0, 0x3d, 0xa3, 0x57, 0x10, 0xb1, 0x33, 0x96, 0x86, 0x99, 0xff, 0x4f, 0x6e, 0xf9,
	0x41, 0xeb, 0x21, 0xb4, 0x86, 0x40, 0x28, 0xde, 0x27, 0xa7, 0xdd, 0x86, 0xbc, 0x6d, 0x6f, 0x7c,
	0x28, 0xbf, 0xfb, 0x37, 0x11, 0xf2, 0xda, 0xcb, 0x59, 0x6b, 0x13, 0x43, 0x1e, 0x16, 0x6b, 0x00,
	0x57, 0x9a, 0x82, 0xa2, 0xc0, 0x3f, 0xfd, 0x73, 0x18, 0xbf, 0x32, 0xde, 0x9b, 0x22, 0x92, 0x78,
	0x66, 0xfc, 0x9f, 0x4f, 0x12, 0x17, 0xb2, 0x73, 0x11, 0xf9, 0xbb, 0x6f, 0x9c, 0xfe, 0x6d, 0x6c,
	0x4a, 0x27, 0x93, 0xed, 0x5b, 0x14, 0x0c, 0xd8, 0xf6, 0xfd, 0xe3, 0x25, 0x48, 0xc5, 0xb9, 0xba,
	0xdb, 0x99, 0xa6, 0x86, 0x55, 0x0b, 0xaa, 0x5a, 0x51, 0xf7, 0x35, 0x3d, 0x9b, 0xf0, 0xe3, 0xa5,
	0x5d, 0x75, 0x87, 0xcc, 0x06, 0x53, 0xc4, 0x79, 0x3d, 0xe5, 0x9c, 0xdd, 0xfc, 0x6f, 0x8f, 0x8b,
	0xbe, 0x1f, 0xf7, 0xf2, 0x33, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x38, 0x12, 0x22, 0xe3, 0x01, 0x00,
	0x00,
}
